{"version":3,"file":"static/js/387.d9d758ff.chunk.js","mappings":"kRACaA,EAAWC,EAAAA,GAAAA,GAAH,mFAKRC,EAAYD,EAAAA,GAAAA,GAAH,yFAKTE,EAAYF,EAAAA,GAAAA,IAAH,4FAITG,EAAcH,EAAAA,GAAAA,EAAH,+CAGXI,EAAgBJ,EAAAA,GAAAA,EAAH,oE,SCkC1B,EAxCa,WACX,IAAQK,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAcA,OATAC,EAAAA,EAAAA,YAAU,WACR,GAAKL,EAAL,CACA,IAAMM,EAAmB,mCAAG,qGACLC,EAAAA,EAAAA,IAAsBP,EAP3B,WAMU,OACpBQ,EADoB,OAE1BJ,EAASI,EAAOC,KAAKC,MAFK,2CAAH,qDAIzBJ,GALoB,CAMrB,GAAE,CAACN,KAGF,SAACN,EAAD,UACoB,IAAjBS,EAAMQ,QACLR,EAAMS,KAAI,YAAqD,IAAlDC,EAAiD,EAAjDA,GAAIC,EAA6C,EAA7CA,aAAcC,EAA+B,EAA/BA,UAAWC,EAAoB,EAApBA,cACxC,OACE,UAACpB,EAAD,YACE,SAACC,EAAD,CACEoB,IACEH,EAAY,0CAC2BA,GApBrD,8EAuBYI,IAAKH,EACLI,MAAO,OAET,SAACpB,EAAD,UAAgBiB,KAChB,UAAClB,EAAD,WAAa,OAAKiB,OAXJF,EAcnB,KAGR,C,uKChDKO,EAAU,mCACVC,EAAW,gCAEJC,EAAU,mCAAG,WAAMC,GAAN,gGAECC,EAAAA,EAAAA,IAAA,UAClBH,GADkB,OACPE,EADO,oBACaH,IAHd,cAEhBK,EAFgB,yBAKfA,GALe,gCAOtBC,MAAM,KAAMC,SAPU,yDAAH,sDAWVC,EAAY,mCAAG,WAAMf,GAAN,gGAEDW,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDR,EADC,oBACaO,IAHZ,cAElBK,EAFkB,yBAKjBA,GALiB,gCAOxBC,MAAM,KAAMC,SAPY,yDAAH,sDAWZpB,EAAqB,mCAAG,WAAOM,EAAIgB,GAAX,gGAEVL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDR,EADC,YACKgB,EADL,oBAC4BT,IAHlB,cAE3BK,EAF2B,yBAK1BA,GAL0B,gCAOjCC,MAAM,KAAMC,SAPqB,yDAAH,wDAWrBG,EAAW,mCAAG,WAAMC,GAAN,gGAEAP,EAAAA,EAAAA,IAAA,UAClBH,EADkB,8BACYU,EADZ,oBAC+BX,IAH/B,cAEjBK,EAFiB,yBAKhBA,GALgB,gCAOvBC,MAAM,KAAMC,SAPW,yDAAH,qD","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","helpers/fetchMovie.jsx"],"sourcesContent":["import styled from 'styled-components';\nexport const ActorBox = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  list-style: none;\n`;\nexport const ActorItem = styled.li`\n  width: calc(100% / 12);\n  height: 300px;\n  font-size: 10px;\n`;\nexport const StyledImg = styled.img`\n  display: block;\n  box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n`;\nexport const ParagrafeAs = styled.p`\n  text-align: center;\n`;\nexport const ParagrafeName = styled.p`\n  text-align: center;\n  font-weight: 700;\n`;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { fetchMovieDescription } from 'helpers';\nimport {\n  ActorBox,\n  ActorItem,\n  StyledImg,\n  ParagrafeAs,\n  ParagrafeName,\n} from './Cast.styled';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [state, setState] = useState([]);\n  const description = 'credits';\n  const defaultImg =\n    'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\n  useEffect(() => {\n    if (!movieId) return;\n    const getMovieDescription = async () => {\n      const result = await fetchMovieDescription(movieId, description);\n      setState(result.data.cast);\n    };\n    getMovieDescription();\n  }, [movieId]);\n\n  return (\n    <ActorBox>\n      {state.length !== 0 &&\n        state.map(({ id, profile_path, character, original_name }) => {\n          return (\n            <ActorItem key={id}>\n              <StyledImg\n                src={\n                  profile_path\n                    ? `https://image.tmdb.org/t/p/w500/${profile_path}`\n                    : defaultImg\n                }\n                alt={character}\n                width={100}\n              />\n              <ParagrafeName>{original_name}</ParagrafeName>\n              <ParagrafeAs>As: {character}</ParagrafeAs>\n            </ActorItem>\n          );\n        })}\n    </ActorBox>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst API_KEY = 'da36feb63eaaa09d19d7bec78ef1c818';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const fetchMovie = async endPoint => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}${endPoint}?api_key=${API_KEY}`\n    );\n    return response;\n  } catch (error) {\n    alert(error.message);\n  }\n};\n\nexport const fetchMovieId = async id => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${id}?api_key=${API_KEY}`\n    );\n    return response;\n  } catch (error) {\n    alert(error.message);\n  }\n};\n\nexport const fetchMovieDescription = async (id, description) => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${id}/${description}?api_key=${API_KEY}`\n    );\n    return response;\n  } catch (error) {\n    alert(error.message);\n  }\n};\n\nexport const searchFetch = async details => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}search/movie?query=${details}&api_key=${API_KEY}`\n    );\n    return response;\n  } catch (error) {\n    alert(error.message);\n  }\n};\n"],"names":["ActorBox","styled","ActorItem","StyledImg","ParagrafeAs","ParagrafeName","movieId","useParams","useState","state","setState","useEffect","getMovieDescription","fetchMovieDescription","result","data","cast","length","map","id","profile_path","character","original_name","src","alt","width","API_KEY","BASE_URL","fetchMovie","endPoint","axios","response","alert","message","fetchMovieId","description","searchFetch","details"],"sourceRoot":""}