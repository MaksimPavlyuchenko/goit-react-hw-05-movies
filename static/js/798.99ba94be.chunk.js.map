{"version":3,"file":"static/js/798.99ba94be.chunk.js","mappings":"uRAEMA,EAAU,mCACVC,EAAW,gCAEJC,EAAU,mCAAG,6GAECC,EAAAA,EAAAA,IAAA,UAClBF,EADkB,sCACoBD,IAHrB,cAEhBI,EAFgB,yBAKfA,GALe,gCAOtBC,MAAM,KAAMC,SAPU,yDAAH,qDAWVC,EAAY,mCAAG,WAAMC,GAAN,gGAEDL,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iBACDO,EADC,oBACaR,IAHZ,cAElBI,EAFkB,yBAKjBA,GALiB,gCAOxBC,MAAM,KAAMC,SAPY,yDAAH,sDAWZG,EAAqB,mCAAG,WAAOD,EAAIE,GAAX,gGAEVP,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iBACDO,EADC,YACKE,EADL,oBAC4BV,IAHlB,cAE3BI,EAF2B,yBAK1BA,GAL0B,gCAOjCC,MAAM,KAAMC,SAPqB,yDAAH,wDAWrBK,EAAW,mCAAG,WAAMC,GAAN,gGAEAT,EAAAA,EAAAA,IAAA,UAClBF,EADkB,8BACYW,EADZ,oBAC+BZ,IAH/B,cAEjBI,EAFiB,yBAKhBA,GALgB,gCAOvBC,MAAM,KAAMC,SAPW,yDAAH,qD,sKCpCXO,EAAiBC,EAAAA,GAAAA,IAAH,6GAQdC,EAAQD,EAAAA,GAAAA,EAAH,4HAMLE,EAAWF,EAAAA,GAAAA,IAAH,yEAGRG,EAAYH,EAAAA,GAAAA,EAAH,4HAMTI,EAAiBJ,EAAAA,GAAAA,IAAH,0C,SCgB3B,EA9BiB,SAAC,GAAe,IAAbK,EAAY,EAAZA,MACZC,EAASD,EAAMC,OAAOC,SAAQ,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAIzC,OACE,UAACV,EAAD,YACE,SAACG,EAAD,CACEQ,IACEL,EAAMM,YAAN,0CACuCN,EAAMM,aAPnD,8EAUIC,MAAO,IACPC,IAAI,YAEN,UAACT,EAAD,YACE,UAACH,EAAD,WACGI,EAAMS,MAAM,KAAGT,EAAMU,aAAa,QAErC,yBAAG,iBAAoC,GAArBV,EAAMW,cAAmBC,QAAQ,GAAG,QACtD,SAACd,EAAD,UAAW,cACX,0BAAOE,EAAMa,YACb,SAACf,EAAD,UAAW,YACX,0BAAOG,EAAOa,KAAK,YAI1B,E,QCpCYC,EAAUpB,EAAAA,GAAAA,IAAH,gEAKPqB,GAAarB,EAAAA,EAAAA,IAAOsB,EAAAA,GAAPtB,CAAH,ifCkCvB,EAlCqB,WAAO,IAAD,IACjBuB,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA+BE,EAAAA,EAAAA,UAAS,IAAxC,eAAOC,EAAP,KAAmBC,EAAnB,KAEMC,EAAY,qBADDC,EAAAA,EAAAA,MACaxB,aAAZ,aAAG,EAAgByB,YAAnB,QAA2B,IACvCC,GAAUC,EAAAA,EAAAA,QAAOJ,GAWvB,OATAK,EAAAA,EAAAA,YAAU,WACR,GAAKV,EAAL,CACA,IAAMW,EAAU,mCAAG,qGACIzC,EAAAA,EAAAA,IAAa8B,GADjB,OACXY,EADW,OAEjBR,EAASQ,EAAOC,MAFC,2CAAH,qDAIhBF,GALoB,CAMrB,GAAE,CAACX,KAGF,gCACGA,IACC,gCACyB,IAAtBG,EAAWW,SAAgB,SAAC,EAAD,CAAUhC,MAAOqB,KAC7C,UAACN,EAAD,YACE,SAACC,EAAD,CAAYiB,GAAG,OAAf,SAAsB,UACtB,SAACjB,EAAD,CAAYiB,GAAG,UAAf,SAAyB,aACzB,SAACjB,EAAD,CAAYiB,GAAIP,EAAQQ,QAAxB,SAAiC,mBAKvC,SAAC,KAAD,MAGL,C","sources":["helpers/fetchMovie.jsx","components/MovieBox/MovieBox.styled.js","components/MovieBox/MovieBox.jsx","styles/MovieDetails.styled.js","pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'da36feb63eaaa09d19d7bec78ef1c818';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const fetchMovie = async () => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}trending/movie/day?api_key=${API_KEY}`\n    );\n    return response;\n  } catch (error) {\n    alert(error.message);\n  }\n};\n\nexport const fetchMovieId = async id => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${id}?api_key=${API_KEY}`\n    );\n    return response;\n  } catch (error) {\n    alert(error.message);\n  }\n};\n\nexport const fetchMovieDescription = async (id, description) => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${id}/${description}?api_key=${API_KEY}`\n    );\n    return response;\n  } catch (error) {\n    alert(error.message);\n  }\n};\n\nexport const searchFetch = async details => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}search/movie?query=${details}&api_key=${API_KEY}`\n    );\n    return response;\n  } catch (error) {\n    alert(error.message);\n  }\n};\n","import styled from 'styled-components';\n\nexport const MovieBoxStyled = styled.div`\n  display: flex;\n  justify-content: center;\n\n  gap: 20px;\n\n  margin-top: 20px;\n`;\nexport const Title = styled.p`\n  font-size: 40px;\n  font-weight: 700;\n\n  text-shadow: rgba(0, 0, 0, 0.15) 1.95px 1.95px 2.6px;\n`;\nexport const ImageBox = styled.img`\n  box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n`;\nexport const Paragrafe = styled.p`\n  font-size: 25px;\n  font-weight: 500;\n\n  text-shadow: rgba(0, 0, 0, 0.15) 1.95px 1.95px 2.6px;\n`;\nexport const DescriptionBox = styled.div`\n  width: 1160px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  MovieBoxStyled,\n  Title,\n  ImageBox,\n  Paragrafe,\n  DescriptionBox,\n} from './MovieBox.styled';\n\nconst MovieBox = ({ state }) => {\n  const genres = state.genres.flatMap(genre => genre.name);\n  const defaultImg =\n    'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\n  return (\n    <MovieBoxStyled>\n      <ImageBox\n        src={\n          state.poster_path\n            ? `https://image.tmdb.org/t/p/w500/${state.poster_path}`\n            : defaultImg\n        }\n        width={250}\n        alt=\"poster\"\n      />\n      <DescriptionBox>\n        <Title>\n          {state.title} ({state.release_date})\n        </Title>\n        <p>User scores: {(state.vote_average * 10).toFixed(0)}%</p>\n        <Paragrafe>OVERVIEW</Paragrafe>\n        <span>{state.overview}</span>\n        <Paragrafe>GENRES</Paragrafe>\n        <span>{genres.join(' ')}</span>\n      </DescriptionBox>\n    </MovieBoxStyled>\n  );\n};\n\nexport default MovieBox;\n\nMovieBox.propTypes = {\n  state: PropTypes.shape({\n    title: PropTypes.string,\n    release_date: PropTypes.string,\n    vote_average: PropTypes.number,\n    overview: PropTypes.string,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({\n        name: PropTypes.string,\n      })\n    ),\n  }),\n};\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const BoxLink = styled.div`\n  display: flex;\n  margin-left: 40px;\n`;\n\nexport const StyledLink = styled(NavLink)`\n  display: block;\n  width: 70px;\n\n  padding: 10px;\n  margin-top: 10px;\n  margin-right: 10px;\n  border: 1px solid black;\n  border-radius: 4px;\n\n  text-decoration: none;\n  text-align: center;\n  color: black;\n\n  box-shadow: rgba(50, 50, 93, 0.25) 0px 50px 100px -20px,\n    rgba(0, 0, 0, 0.3) 0px 30px 60px -30px,\n    rgba(10, 37, 64, 0.35) 0px -2px 6px 0px inset;\n  :hover {\n    background-color: orangered;\n    color: white;\n    border-color: white;\n  }\n`;\n","import React, { useEffect, useRef, useState } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\n\nimport { fetchMovieId } from 'helpers';\nimport MovieBox from 'components/MovieBox/MovieBox';\n\nimport { StyledLink, BoxLink } from '../styles/MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [stateArray, setState] = useState([]);\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n  const stopRef = useRef(backLinkHref);\n\n  useEffect(() => {\n    if (!movieId) return;\n    const getMovieId = async () => {\n      const result = await fetchMovieId(movieId);\n      setState(result.data);\n    };\n    getMovieId();\n  }, [movieId]);\n\n  return (\n    <>\n      {movieId && (\n        <>\n          {stateArray.length !== 0 && <MovieBox state={stateArray} />}\n          <BoxLink>\n            <StyledLink to=\"cast\">CAST</StyledLink>\n            <StyledLink to=\"reviews\">REVIEWS</StyledLink>\n            <StyledLink to={stopRef.current}>GO BACK</StyledLink>\n          </BoxLink>\n        </>\n      )}\n\n      <Outlet />\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["API_KEY","BASE_URL","fetchMovie","axios","response","alert","message","fetchMovieId","id","fetchMovieDescription","description","searchFetch","details","MovieBoxStyled","styled","Title","ImageBox","Paragrafe","DescriptionBox","state","genres","flatMap","genre","name","src","poster_path","width","alt","title","release_date","vote_average","toFixed","overview","join","BoxLink","StyledLink","NavLink","movieId","useParams","useState","stateArray","setState","backLinkHref","useLocation","from","stopRef","useRef","useEffect","getMovieId","result","data","length","to","current"],"sourceRoot":""}